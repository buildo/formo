(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{75:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return p})),t.d(a,"metadata",(function(){return m})),t.d(a,"toc",(function(){return b})),t.d(a,"default",(function(){return c}));var n=t(3),r=t(7),s=(t(0),t(88)),l=["components"],p={id:"subform",title:"Sub form"},m={unversionedId:"subform",id:"subform",isDocsHomePage:!1,title:"Sub form",description:"formo provides a simple way to create subforms.",source:"@site/docs/subform.md",slug:"/subform",permalink:"/formo/subform",editUrl:"https://github.com/buildo/formo/edit/main/website/docs/subform.md",version:"current",sidebar:"someSidebar",previous:{title:"Submitting a form",permalink:"/formo/submitting"}},b=[{value:"Define a sub form",id:"define-a-sub-form",children:[]},{value:"Accessing sub forms",id:"accessing-sub-forms",children:[]}],o={toc:b};function c(e){var a=e.components,t=Object(r.a)(e,l);return Object(s.b)("wrapper",Object(n.a)({},o,t,{components:a,mdxType:"MDXLayout"}),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"formo")," provides a simple way to create subforms.\nA ",Object(s.b)("inlineCode",{parentName:"p"},"subForm")," is a nested form which requires its own validations.\nThe typical use case is when you have a field which is a variable list of complex elements."),Object(s.b)("p",null,"For example, let's say you have a form asking the user their ",Object(s.b)("inlineCode",{parentName:"p"},"name"),", ",Object(s.b)("inlineCode",{parentName:"p"},"surname")," and ",Object(s.b)("inlineCode",{parentName:"p"},"familyMembers"),". The ",Object(s.b)("inlineCode",{parentName:"p"},"familyMembers"),", in turn, have their own fields (",Object(s.b)("inlineCode",{parentName:"p"},"name")," and ",Object(s.b)("inlineCode",{parentName:"p"},"surname"),") that need to be validated ",Object(s.b)("em",{parentName:"p"},"before")," being added to the user's field array."),Object(s.b)("div",{className:"shiki-twoslash-fragment"}),Object(s.b)("div",{className:"shiki-twoslash-fragment"},Object(s.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"import"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) function useFormo<Values extends Record<string, unknown>, Validators extends Partial<FieldValidators<Values>>, ArrayValidators extends Partial<SubFormValidators<Values>>, FormErrors, Label>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<Values, FormErrors, Label, ValidatorErrorType<Values, Validators>>\nimport useFormo"},"useFormo")),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) function subFormValue<A extends unknown[]>(arrayFieldValue: A): SubFormValue<A>\nimport subFormValue"},"subFormValue")),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) function success<L = never, R = never>(success: R): Result<L, R>\nimport success"},"success")),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")," } "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"from"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"@buildo/formo"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},";")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"type"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"type FamilyMember = {\n    name: string;\n    surname: string;\n}"},"FamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},"string"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},";")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: string"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},"string"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},";")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"};")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"export"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const MyForm: () => JSX.Element"},"MyForm")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," () "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," { "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const handleSubmit: () => Promise<Result<unknown, unknown>>"},"handleSubmit")),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const fieldProps: <K extends SimpleValueKeys<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}>>(name: K) => ComputedFieldProps<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}[K], unknown, NonEmptyArray<...>>"},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <K extends "familyMembers">(name: K) => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, K, unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const formErrors: undefined"},"formErrors")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," } "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) useFormo<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, {}, {\n    familyMembers: {\n        name: Validator<string, string, string>;\n        surname: Validator<...>;\n    };\n}, never, unknown>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<...>\nimport useFormo"},"useFormo")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) initialValues: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}"},"initialValues")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Jhon"'),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: string"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Doe"'),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) familyMembers: SubFormValue<FamilyMember[]>"},"familyMembers")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue"},"subFormValue")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"interface Array<T>"},"Array")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"type FamilyMember = {\n    name: string;\n    surname: string;\n}"},"FamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">>([])"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      }"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) fieldValidators: (values: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}) => {}"},"fieldValidators")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," () "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ({})"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) subFormValidators?: ((values: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, index: number) => {\n    familyMembers: {\n        name: Validator<string, string, string>;\n        surname: Validator<...>;\n    };\n}) | undefined"},"subFormValidators")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," () "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ({")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) familyMembers: {\n    name: Validator<string, string, string>;\n    surname: Validator<string, string, string>;\n}"},"familyMembers")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"          ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: Validator<string, string, string>"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <string, string>(length: number, errorMessage: string) => Validator<string, string, string>"},"minLength")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},"1"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Family member name is required"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"          ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: Validator<string, string, string>"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <string, string>(length: number, errorMessage: string) => Validator<string, string, string>"},"minLength")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},"1"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Family member surname is required"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        }"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      })"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    }"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) onSubmit: (values: ValidatedValues<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, {}, {\n    familyMembers: {\n        name: Validator<string, string, string>;\n        surname: Validator<...>;\n    };\n}>) => Promise<...>"},"onSubmit")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," () "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"var Promise: PromiseConstructor"},"Promise")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:"(method) PromiseConstructor.resolve<Success<null> | Failure<never>>(value: Success<null> | Failure<never> | PromiseLike<Success<null> | Failure<never>>): Promise<...> (+1 overload)"},"resolve")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) success<never, null>(success: null): Result<never, null>\nimport success"},"success")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},"null"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"))"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    }")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  );")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const emptyFamilyMember: {\n    name: string;\n    surname: string;\n}"},"emptyFamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'""'),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: string"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'""'),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  };")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"return"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," (")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    <"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      <"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <"name">(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<never>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")} />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      <"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <"surname">(name: "surname") => ComputedFieldProps<string, unknown, NonEmptyArray<never>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")} />")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      <"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        <"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button"))),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"          "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined"},"onClick")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{() "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) push: <"name" | "surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name" | "surname">>(value: FamilyMember) => void'},"push")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(",Object(s.b)("data-lsp",{parentName:"span",lsp:"const emptyFamilyMember: {\n    name: string;\n    surname: string;\n}"},"emptyFamilyMember"),")}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        >")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"          Add family members")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        </"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        {"),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) items: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]'},"items")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(method) Array<{ fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{ name: string; surname: string; familyMembers: SubFormValue<FamilyMember[]>; }, SK>>(name: SK) => ComputedFieldProps<...>; onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown; remove: () => void; namePrefix: string; }>.map<JSX.Element>(callbackfn: (value: {\n    fieldProps: <SK, V>(name: SK) => ComputedFieldProps<V["familyMembers"][number][SK], unknown, NonEmptyArray<never>>;\n    onChangeValues: <SK, V>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}, index: number, array: {\n    fieldProps: <SK, V>(name: SK) => ComputedFieldProps<V["familyMembers"][number][SK], unknown, NonEmptyArray<never>>;\n    onChangeValues: <SK, V>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]) => JSX.Element, thisArg?: any): JSX.Element[]'},"map")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"((",Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index"),") "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," (")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"          <"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.Attributes.key?: React.Key | null | undefined"},"key")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) namePrefix: string"},"namePrefix")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"-container`"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"}>")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"            <"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField"))),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"              "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"-name`"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"              {"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"name", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name">>(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"            />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"            <"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField"))),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"              "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"-surname`"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"              {"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "surname">>(name: "surname") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"            />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"            <"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>"},"p")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"              {"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"name", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name">>(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},").",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) issues?: NonEmptyArray<never> | undefined"},"issues"),"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"              <"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>"},"br")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"              {"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "surname">>(name: "surname") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},").",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) issues?: NonEmptyArray<never> | undefined"},"issues"),"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"            </"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>"},"p")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"          </"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ))}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      </"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      <"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined"},"onClick")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{",Object(s.b)("data-lsp",{parentName:"span",lsp:"const handleSubmit: () => Promise<Result<unknown, unknown>>"},"handleSubmit"),"}>Sign up</"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    </"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  );")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"};"))))),Object(s.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"import"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," { "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) function useFormo<Values extends Record<string, unknown>, Validators extends Partial<FieldValidators<Values>>, ArrayValidators extends Partial<SubFormValidators<Values>>, FormErrors, Label>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<Values, FormErrors, Label, ValidatorErrorType<Values, Validators>>\nimport useFormo"},"useFormo")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) function subFormValue<A extends unknown[]>(arrayFieldValue: A): SubFormValue<A>\nimport subFormValue"},"subFormValue")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) function success<L = never, R = never>(success: R): Result<L, R>\nimport success"},"success")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," } "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"from"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"@buildo/formo"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},";")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"type"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"type FamilyMember = {\n    name: string;\n    surname: string;\n}"},"FamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},"string"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},";")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: string"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},"string"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},";")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"};")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"export"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const MyForm: () => JSX.Element"},"MyForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," () "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," { "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const handleSubmit: () => Promise<Result<unknown, unknown>>"},"handleSubmit")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const fieldProps: <K extends SimpleValueKeys<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}>>(name: K) => ComputedFieldProps<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}[K], unknown, NonEmptyArray<...>>"},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <K extends "familyMembers">(name: K) => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, K, unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const formErrors: undefined"},"formErrors")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," } "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) useFormo<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, {}, {\n    familyMembers: {\n        name: Validator<string, string, string>;\n        surname: Validator<...>;\n    };\n}, never, unknown>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<...>\nimport useFormo"},"useFormo")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) initialValues: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}"},"initialValues")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Jhon"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: string"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Doe"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) familyMembers: SubFormValue<FamilyMember[]>"},"familyMembers")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue"},"subFormValue")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"interface Array<T>"},"Array")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"type FamilyMember = {\n    name: string;\n    surname: string;\n}"},"FamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">>([]),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      },")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) fieldValidators: (values: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}) => {}"},"fieldValidators")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": () "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ({}),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) subFormValidators?: ((values: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, index: number) => {\n    familyMembers: {\n        name: Validator<string, string, string>;\n        surname: Validator<...>;\n    };\n}) | undefined"},"subFormValidators")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": () "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ({")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) familyMembers: {\n    name: Validator<string, string, string>;\n    surname: Validator<string, string, string>;\n}"},"familyMembers")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"          "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: Validator<string, string, string>"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <string, string>(length: number, errorMessage: string) => Validator<string, string, string>"},"minLength")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},"1"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Family member name is required"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"          "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: Validator<string, string, string>"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <string, string>(length: number, errorMessage: string) => Validator<string, string, string>"},"minLength")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},"1"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Family member surname is required"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        },")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      }),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    },")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) onSubmit: (values: ValidatedValues<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, {}, {\n    familyMembers: {\n        name: Validator<string, string, string>;\n        surname: Validator<...>;\n    };\n}>) => Promise<...>"},"onSubmit")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": () "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"var Promise: PromiseConstructor"},"Promise")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(method) PromiseConstructor.resolve<Success<null> | Failure<never>>(value: Success<null> | Failure<never> | PromiseLike<Success<null> | Failure<never>>): Promise<...> (+1 overload)"},"resolve")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) success<never, null>(success: null): Result<never, null>\nimport success"},"success")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},"null"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    }")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  );")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const emptyFamilyMember: {\n    name: string;\n    surname: string;\n}"},"emptyFamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'""'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: string"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'""'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  };")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"return"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," (")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    <"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      <"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <"name">(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<never>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      <"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <"surname">(name: "surname") => ComputedFieldProps<string, unknown, NonEmptyArray<never>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," />")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      <"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        <"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button"))),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"          "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined"},"onClick")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"() "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) push: <"name" | "surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name" | "surname">>(value: FamilyMember) => void'},"push")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const emptyFamilyMember: {\n    name: string;\n    surname: string;\n}"},"emptyFamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        >")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"          Add family members")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        </"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) items: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]'},"items")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(method) Array<{ fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{ name: string; surname: string; familyMembers: SubFormValue<FamilyMember[]>; }, SK>>(name: SK) => ComputedFieldProps<...>; onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown; remove: () => void; namePrefix: string; }>.map<JSX.Element>(callbackfn: (value: {\n    fieldProps: <SK, V>(name: SK) => ComputedFieldProps<V["familyMembers"][number][SK], unknown, NonEmptyArray<never>>;\n    onChangeValues: <SK, V>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}, index: number, array: {\n    fieldProps: <SK, V>(name: SK) => ComputedFieldProps<V["familyMembers"][number][SK], unknown, NonEmptyArray<never>>;\n    onChangeValues: <SK, V>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]) => JSX.Element, thisArg?: any): JSX.Element[]'},"map")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(("),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," (")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"          <"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.Attributes.key?: React.Key | null | undefined"},"key")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) namePrefix: string"},"namePrefix")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"-container`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"            <"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField"))),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"              "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"-name`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"              "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"name", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name">>(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"            />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"            <"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField"))),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"              "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"-surname`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"              "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "surname">>(name: "surname") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"            />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"            <"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>"},"p")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"              "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"name", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name">>(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) issues?: NonEmptyArray<never> | undefined"},"issues")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"              <"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>"},"br")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"              "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "surname">>(name: "surname") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) issues?: NonEmptyArray<never> | undefined"},"issues")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"            </"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>"},"p")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"          </"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        ))"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      </"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      <"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined"},"onClick")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const handleSubmit: () => Promise<Result<unknown, unknown>>"},"handleSubmit")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">Sign up</"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    </"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  );")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"};")))))),Object(s.b)("p",null,"Let's break down the code above."),Object(s.b)("h2",{id:"define-a-sub-form"},"Define a sub form"),Object(s.b)("div",{className:"shiki-twoslash-fragment"}),Object(s.b)("div",{className:"shiki-twoslash-fragment"}),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"subFormValue")," function is used to initialize a subform: this instructs ",Object(s.b)("inlineCode",{parentName:"p"},"formo")," to treat the field as a sub form, rather than a regular top-level field.\nIf the initial state is an empty array you will need to provide a type hint, since TypeScript won't be able to infer the type for you, for example:"),Object(s.b)("div",{className:"shiki-twoslash-fragment"},Object(s.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue",style:{borderBottom:"solid 2px lightgrey"}},"subFormValue")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"([] "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"as"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"interface Array<T>"},"Array")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"type FamilyMember = {\n    name: string;\n    surname: string;\n}"},"FamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">);")),Object(s.b)("div",{parentName:"code",className:"meta-line"},Object(s.b)("span",{parentName:"div",className:"popover-prefix"},"     "),Object(s.b)("span",{parentName:"div",className:"popover"},Object(s.b)("div",{parentName:"span",className:"arrow"}),"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue"))))),Object(s.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue",style:{borderBottom:"solid 2px lightgrey"}},"subFormValue")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"([] "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"as"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"interface Array<T>"},"Array")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"type FamilyMember = {\n    name: string;\n    surname: string;\n}"},"FamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">);")),Object(s.b)("div",{parentName:"code",className:"meta-line"},Object(s.b)("span",{parentName:"div",className:"popover-prefix"},"     "),Object(s.b)("span",{parentName:"div",className:"popover"},Object(s.b)("div",{parentName:"span",className:"arrow"}),"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue")))))),Object(s.b)("p",null,"otherwise, you can explicitly define the type of the assigned constant"),Object(s.b)("div",{className:"shiki-twoslash-fragment"},Object(s.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const familyMembersInitialState: FamilyMember[]"},"familyMembersInitialState")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"interface Array<T>"},"Array")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"type FamilyMember = {\n    name: string;\n    surname: string;\n}"},"FamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"> "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," [];")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue",style:{borderBottom:"solid 2px lightgrey"}},"subFormValue")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(",Object(s.b)("data-lsp",{parentName:"span",lsp:"const familyMembersInitialState: FamilyMember[]"},"familyMembersInitialState"),");")),Object(s.b)("div",{parentName:"code",className:"meta-line"},Object(s.b)("span",{parentName:"div",className:"popover-prefix"},"     "),Object(s.b)("span",{parentName:"div",className:"popover"},Object(s.b)("div",{parentName:"span",className:"arrow"}),"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue"))))),Object(s.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const familyMembersInitialState: FamilyMember[]"},"familyMembersInitialState")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"interface Array<T>"},"Array")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"type FamilyMember = {\n    name: string;\n    surname: string;\n}"},"FamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"> "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," [];")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue",style:{borderBottom:"solid 2px lightgrey"}},"subFormValue")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const familyMembersInitialState: FamilyMember[]"},"familyMembersInitialState")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},");")),Object(s.b)("div",{parentName:"code",className:"meta-line"},Object(s.b)("span",{parentName:"div",className:"popover-prefix"},"     "),Object(s.b)("span",{parentName:"div",className:"popover"},Object(s.b)("div",{parentName:"span",className:"arrow"}),"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue")))))),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"subFormValidators")," work the same as ",Object(s.b)("inlineCode",{parentName:"p"},"fieldValidators"),', except they are applied to each of the members of the "sub form" fields.'),Object(s.b)("div",{className:"shiki-twoslash-fragment"},Object(s.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," { "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const handleSubmit: () => Promise<Result<unknown, unknown>>"},"handleSubmit")),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const fieldProps: <K extends SimpleValueKeys<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}>>(name: K) => ComputedFieldProps<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}[K], unknown, NonEmptyArray<...>>"},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <K extends "familyMembers">(name: K) => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, K, unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const formErrors: undefined"},"formErrors")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," } "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) useFormo<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, {}, {\n    familyMembers: {\n        name: Validator<unknown, unknown, string>;\n        surname: Validator<unknown, unknown, string>;\n    };\n}, never, unknown>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<...>\nimport useFormo"},"useFormo")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) initialValues: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}"},"initialValues")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Jhon"'),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: string"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Doe"'),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) familyMembers: SubFormValue<FamilyMember[]>"},"familyMembers")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue"},"subFormValue")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"interface Array<T>"},"Array")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"type FamilyMember = {\n    name: string;\n    surname: string;\n}"},"FamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">>([])"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    }"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) fieldValidators: (values: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}) => {}"},"fieldValidators")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," () "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ({})"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) subFormValidators?: ((values: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, index: number) => {\n    familyMembers: {\n        name: Validator<unknown, unknown, string>;\n        surname: Validator<...>;\n    };\n}) | undefined"},"subFormValidators")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," () "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ({")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) familyMembers: {\n    name: Validator<unknown, unknown, string>;\n    surname: Validator<unknown, unknown, string>;\n}"},"familyMembers")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: Validator<unknown, unknown, string>"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) fromPredicate: <unknown, string>(predicate: (input: unknown) => boolean, errorMessage: string) => Validator<unknown, unknown, string> (+1 overload)"},"fromPredicate")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"          (",Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: unknown"},"i"),") "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"typeof"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: unknown"},"i")," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"==="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"string"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"&&"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: string"},"i")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) String.length: number"},"length")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},">"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},"0"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"          "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Family member name is required"')),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        )"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: Validator<unknown, unknown, string>"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) fromPredicate: <unknown, string>(predicate: (input: unknown) => boolean, errorMessage: string) => Validator<unknown, unknown, string> (+1 overload)"},"fromPredicate")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"          (",Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: unknown"},"i"),") "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"typeof"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: unknown"},"i")," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"==="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"string"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"&&"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: string"},"i")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) String.length: number"},"length")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},">"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},"0"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"          "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Family member surname is required"')),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        )"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      }"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    })"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  }"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) onSubmit: (values: ValidatedValues<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, {}, {\n    familyMembers: {\n        name: Validator<unknown, unknown, string>;\n        surname: Validator<...>;\n    };\n}>) => Promise<...>"},"onSubmit")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," () "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"var Promise: PromiseConstructor"},"Promise")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:"(method) PromiseConstructor.resolve<Success<null> | Failure<never>>(value: Success<null> | Failure<never> | PromiseLike<Success<null> | Failure<never>>): Promise<...> (+1 overload)"},"resolve")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) success<never, null>(success: null): Result<never, null>\nimport success"},"success")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},"null"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"))"),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  }")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},");")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0")))),Object(s.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," { "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const handleSubmit: () => Promise<Result<unknown, unknown>>"},"handleSubmit")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const fieldProps: <K extends SimpleValueKeys<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}>>(name: K) => ComputedFieldProps<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}[K], unknown, NonEmptyArray<...>>"},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <K extends "familyMembers">(name: K) => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, K, unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const formErrors: undefined"},"formErrors")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," } "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) useFormo<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, {}, {\n    familyMembers: {\n        name: Validator<unknown, unknown, string>;\n        surname: Validator<unknown, unknown, string>;\n    };\n}, never, unknown>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<...>\nimport useFormo"},"useFormo")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) initialValues: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}"},"initialValues")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Jhon"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: string"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Doe"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) familyMembers: SubFormValue<FamilyMember[]>"},"familyMembers")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) subFormValue<FamilyMember[]>(arrayFieldValue: FamilyMember[]): SubFormValue<FamilyMember[]>\nimport subFormValue"},"subFormValue")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"interface Array<T>"},"Array")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"type FamilyMember = {\n    name: string;\n    surname: string;\n}"},"FamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">>([]),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    },")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) fieldValidators: (values: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}) => {}"},"fieldValidators")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": () "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ({}),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) subFormValidators?: ((values: {\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, index: number) => {\n    familyMembers: {\n        name: Validator<unknown, unknown, string>;\n        surname: Validator<...>;\n    };\n}) | undefined"},"subFormValidators")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": () "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ({")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) familyMembers: {\n    name: Validator<unknown, unknown, string>;\n    surname: Validator<unknown, unknown, string>;\n}"},"familyMembers")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: Validator<unknown, unknown, string>"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) fromPredicate: <unknown, string>(predicate: (input: unknown) => boolean, errorMessage: string) => Validator<unknown, unknown, string> (+1 overload)"},"fromPredicate")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"          ("),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: unknown"},"i")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"typeof"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: unknown"},"i")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"==="),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"string"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"&&"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: string"},"i")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) String.length: number"},"length")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},">"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},"0"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"          "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Family member name is required"')),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        ),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: Validator<unknown, unknown, string>"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) fromPredicate: <unknown, string>(predicate: (input: unknown) => boolean, errorMessage: string) => Validator<unknown, unknown, string> (+1 overload)"},"fromPredicate")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"          ("),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: unknown"},"i")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"typeof"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: unknown"},"i")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"==="),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"string"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"&&"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) i: string"},"i")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) String.length: number"},"length")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},">"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},"0"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"          "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Family member surname is required"')),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        ),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      },")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    }),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  },")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) onSubmit: (values: ValidatedValues<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, {}, {\n    familyMembers: {\n        name: Validator<unknown, unknown, string>;\n        surname: Validator<...>;\n    };\n}>) => Promise<...>"},"onSubmit")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": () "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"var Promise: PromiseConstructor"},"Promise")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(method) PromiseConstructor.resolve<Success<null> | Failure<never>>(value: Success<null> | Failure<never> | PromiseLike<Success<null> | Failure<never>>): Promise<...> (+1 overload)"},"resolve")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(alias) success<never, null>(success: null): Result<never, null>\nimport success"},"success")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},"null"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")),")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  }")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},");")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"))))),Object(s.b)("h2",{id:"accessing-sub-forms"},"Accessing sub forms"),Object(s.b)("p",null,"Note how ",Object(s.b)("inlineCode",{parentName:"p"},"subForm")," and ",Object(s.b)("inlineCode",{parentName:"p"},"fieldProps")," statically enforce the correct field names: for example, you can't accidentally call ",Object(s.b)("inlineCode",{parentName:"p"},'subForm("surname")')),Object(s.b)("div",{className:"shiki-twoslash-fragment"},Object(s.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-err",{parentName:"span"},'"name"')),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},");")),Object(s.b)("span",{parentName:"code",className:"error"},Object(s.b)("span",{parentName:"span"},"Argument of type '\"name\"' is not assignable to parameter of type '\"familyMembers\"'."),Object(s.b)("span",{parentName:"span",className:"code"},"2345")),Object(s.b)("span",{parentName:"code",className:"error-behind"},"Argument of type '\"name\"' is not assignable to parameter of type '\"familyMembers\"'."),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-err",{parentName:"span"},'"surname"')),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},");")),Object(s.b)("span",{parentName:"code",className:"error"},Object(s.b)("span",{parentName:"span"},"Argument of type '\"surname\"' is not assignable to parameter of type '\"familyMembers\"'."),Object(s.b)("span",{parentName:"span",className:"code"},"2345")),Object(s.b)("span",{parentName:"code",className:"error-behind"},"Argument of type '\"surname\"' is not assignable to parameter of type '\"familyMembers\"'."),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},");"))))),Object(s.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},Object(s.b)("data-err",{parentName:"span"},'"name"')),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},");")),Object(s.b)("span",{parentName:"code",className:"error"},Object(s.b)("span",{parentName:"span"},"Argument of type '\"name\"' is not assignable to parameter of type '\"familyMembers\"'."),Object(s.b)("span",{parentName:"span",className:"code"},"2345")),Object(s.b)("span",{parentName:"code",className:"error-behind"},"Argument of type '\"name\"' is not assignable to parameter of type '\"familyMembers\"'."),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},Object(s.b)("data-err",{parentName:"span"},'"surname"')),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},");")),Object(s.b)("span",{parentName:"code",className:"error"},Object(s.b)("span",{parentName:"span"},"Argument of type '\"surname\"' is not assignable to parameter of type '\"familyMembers\"'."),Object(s.b)("span",{parentName:"span",className:"code"},"2345")),Object(s.b)("span",{parentName:"code",className:"error-behind"},"Argument of type '\"surname\"' is not assignable to parameter of type '\"familyMembers\"'."),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},");")))))),Object(s.b)("p",null,"You can add new sub forms to a field using ",Object(s.b)("inlineCode",{parentName:"p"},"push")," or ",Object(s.b)("inlineCode",{parentName:"p"},"insertAt"),":"),Object(s.b)("div",{className:"shiki-twoslash-fragment"},Object(s.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},").",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) insertAt: <SK extends "name" | "surname", V extends ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, SK>>(index: number, value: V["familyMembers"][number]) => void',style:{borderBottom:"solid 2px lightgrey"}},"insertAt"),";")),Object(s.b)("div",{parentName:"code",className:"meta-line"},Object(s.b)("span",{parentName:"div",className:"popover-prefix"},"                            "),Object(s.b)("span",{parentName:"div",className:"popover"},Object(s.b)("div",{parentName:"span",className:"arrow"}),'(property) insertAt: <SK extends "name" | "surname", V extends ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, SK>>(index: number, value: V["familyMembers"][number]) => void')),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},").",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) push: <SK extends "name" | "surname", V extends ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, SK>>(value: V["familyMembers"][number]) => void',style:{borderBottom:"solid 2px lightgrey"}},"push"),";")),Object(s.b)("div",{parentName:"code",className:"meta-line"},Object(s.b)("span",{parentName:"div",className:"popover-prefix"},"                          "),Object(s.b)("span",{parentName:"div",className:"popover"},Object(s.b)("div",{parentName:"span",className:"arrow"}),'(property) push: <SK extends "name" | "surname", V extends ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, SK>>(value: V["familyMembers"][number]) => void'))))),Object(s.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) insertAt: <SK extends "name" | "surname", V extends ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, SK>>(index: number, value: V["familyMembers"][number]) => void',style:{borderBottom:"solid 2px lightgrey"}},"insertAt")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},";")),Object(s.b)("div",{parentName:"code",className:"meta-line"},Object(s.b)("span",{parentName:"div",className:"popover-prefix"},"                            "),Object(s.b)("span",{parentName:"div",className:"popover"},Object(s.b)("div",{parentName:"span",className:"arrow"}),'(property) insertAt: <SK extends "name" | "surname", V extends ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, SK>>(index: number, value: V["familyMembers"][number]) => void')),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) push: <SK extends "name" | "surname", V extends ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, SK>>(value: V["familyMembers"][number]) => void',style:{borderBottom:"solid 2px lightgrey"}},"push")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},";")),Object(s.b)("div",{parentName:"code",className:"meta-line"},Object(s.b)("span",{parentName:"div",className:"popover-prefix"},"                          "),Object(s.b)("span",{parentName:"div",className:"popover"},Object(s.b)("div",{parentName:"span",className:"arrow"}),'(property) push: <SK extends "name" | "surname", V extends ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, SK>>(value: V["familyMembers"][number]) => void')))))),Object(s.b)("p",null,"For example, to add a new family member with an initial state, you can use the ",Object(s.b)("inlineCode",{parentName:"p"},"push")," method inside a button ",Object(s.b)("inlineCode",{parentName:"p"},"onClick")),Object(s.b)("div",{className:"shiki-twoslash-fragment"},Object(s.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const emptyFamilyMember: {\n    name: string;\n    surname: string;\n}"},"emptyFamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'""'),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: string"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'""'),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"};")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined"},"onClick")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{() "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) push: <"name" | "surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name" | "surname">>(value: FamilyMember) => void'},"push")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(",Object(s.b)("data-lsp",{parentName:"span",lsp:"const emptyFamilyMember: {\n    name: string;\n    surname: string;\n}"},"emptyFamilyMember"),")}>")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  Add family member")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"</"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">;"))))),Object(s.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const emptyFamilyMember: {\n    name: string;\n    surname: string;\n}"},"emptyFamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," {")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'""'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) surname: string"},"surname")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'""'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"};")),Object(s.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"<"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined"},"onClick")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"() "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) push: <"name" | "surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name" | "surname">>(value: FamilyMember) => void'},"push")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"const emptyFamilyMember: {\n    name: string;\n    surname: string;\n}"},"emptyFamilyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  Add family member")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"</"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">;")))))),Object(s.b)("p",null,"To access all the elements of a sub form field, use the ",Object(s.b)("inlineCode",{parentName:"p"},"items")," property"),Object(s.b)("div",{className:"shiki-twoslash-fragment"},Object(s.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},").",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) items: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]',style:{borderBottom:"solid 2px lightgrey"}},"items"),";")),Object(s.b)("div",{parentName:"code",className:"meta-line"},Object(s.b)("span",{parentName:"div",className:"popover-prefix"},"                          "),Object(s.b)("span",{parentName:"div",className:"popover"},Object(s.b)("div",{parentName:"span",className:"arrow"}),'(property) items: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]'))))),Object(s.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) items: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]',style:{borderBottom:"solid 2px lightgrey"}},"items")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},";")),Object(s.b)("div",{parentName:"code",className:"meta-line"},Object(s.b)("span",{parentName:"div",className:"popover-prefix"},"                          "),Object(s.b)("span",{parentName:"div",className:"popover"},Object(s.b)("div",{parentName:"span",className:"arrow"}),'(property) items: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]')))))),Object(s.b)("p",null,"Each of the items provides a ",Object(s.b)("inlineCode",{parentName:"p"},"fieldProps")," function analogous to the top-level ",Object(s.b)("inlineCode",{parentName:"p"},"fieldProps"),", that can be used to render a form element:"),Object(s.b)("div",{className:"shiki-twoslash-fragment"},Object(s.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) items: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]'},"items")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(method) Array<{ fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{ name: string; surname: string; familyMembers: SubFormValue<FamilyMember[]>; }, SK>>(name: SK) => ComputedFieldProps<...>; onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown; remove: () => void; namePrefix: string; }>.map<JSX.Element>(callbackfn: (value: {\n    fieldProps: <SK, V>(name: SK) => ComputedFieldProps<V["familyMembers"][number][SK], unknown, NonEmptyArray<never>>;\n    onChangeValues: <SK, V>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}, index: number, array: {\n    fieldProps: <SK, V>(name: SK) => ComputedFieldProps<V["familyMembers"][number][SK], unknown, NonEmptyArray<never>>;\n    onChangeValues: <SK, V>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]) => JSX.Element, thisArg?: any): JSX.Element[]'},"map")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"((",Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index"),") "),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," (")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  <"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    <"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField"))),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.Attributes.key?: React.Key | null | undefined"},"key")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) namePrefix: string"},"namePrefix")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"-name`"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"-name`"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      {"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"name", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name">>(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    <"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField"))),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.Attributes.key?: React.Key | null | undefined"},"key")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) namePrefix: string"},"namePrefix")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"-surname`"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index")),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},"-surname`"),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      {"),Object(s.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "surname">>(name: "surname") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    <"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>"},"p")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      {"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"name", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name">>(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},").",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) issues?: NonEmptyArray<never> | undefined"},"issues"),"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      <"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>"},"br")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"></"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>"},"br")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      {"),Object(s.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "surname">>(name: "surname") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},").",Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) issues?: NonEmptyArray<never> | undefined"},"issues"),"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    </"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>"},"p")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  </"),Object(s.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"));"))))),Object(s.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(s.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(s.b)("div",{parentName:"pre",className:"code-container"},Object(s.b)("code",{parentName:"div"},Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'const subForm: <"familyMembers">(name: "familyMembers") => SubForm<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "familyMembers", unknown, never>'},"subForm")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"familyMembers"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) items: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]'},"items")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(method) Array<{ fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{ name: string; surname: string; familyMembers: SubFormValue<FamilyMember[]>; }, SK>>(name: SK) => ComputedFieldProps<...>; onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown; remove: () => void; namePrefix: string; }>.map<JSX.Element>(callbackfn: (value: {\n    fieldProps: <SK, V>(name: SK) => ComputedFieldProps<V["familyMembers"][number][SK], unknown, NonEmptyArray<never>>;\n    onChangeValues: <SK, V>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}, index: number, array: {\n    fieldProps: <SK, V>(name: SK) => ComputedFieldProps<V["familyMembers"][number][SK], unknown, NonEmptyArray<never>>;\n    onChangeValues: <SK, V>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}[]) => JSX.Element, thisArg?: any): JSX.Element[]'},"map")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(("),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," (")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  <"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    <"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField"))),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.Attributes.key?: React.Key | null | undefined"},"key")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) namePrefix: string"},"namePrefix")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"-name`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"-name`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"name", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name">>(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    <"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"function TextField(props: Props): JSX.Element"},"TextField"))),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.Attributes.key?: React.Key | null | undefined"},"key")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) namePrefix: string"},"namePrefix")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"-surname`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(s.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"${"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(parameter) index: number"},"index")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},"-surname`"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"..."),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "surname">>(name: "surname") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")"),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    />")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    <"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>"},"p")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"name", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "name">>(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"name"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) issues?: NonEmptyArray<never> | undefined"},"issues")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      <"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>"},"br")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"></"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>"},"br")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(s.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(parameter) familyMember: {\n    fieldProps: <SK extends "name" | "surname", V extends ArrayRecord<{\n        name: string;\n        surname: string;\n        familyMembers: SubFormValue<FamilyMember[]>;\n    }, SK>>(name: SK) => ComputedFieldProps<...>;\n    onChangeValues: <SK extends "name" | "surname", V extends ArrayRecord<...>>(v: V["familyMembers"][number]) => unknown;\n    remove: () => void;\n    namePrefix: string;\n}'},"familyMember")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(s.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(s.b)("data-lsp",{parentName:"span",lsp:'(property) fieldProps: <"surname", ArrayRecord<{\n    name: string;\n    surname: string;\n    familyMembers: SubFormValue<FamilyMember[]>;\n}, "surname">>(name: "surname") => ComputedFieldProps<string, unknown, NonEmptyArray<...>>'},"fieldProps")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(s.b)("span",{parentName:"div",style:{color:"#98C379"}},'"surname"'),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) issues?: NonEmptyArray<never> | undefined"},"issues")),Object(s.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    </"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>"},"p")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  </"),Object(s.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(s.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(s.b)("div",{parentName:"code",className:"line"},Object(s.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"));")))))))}c.isMDXComponent=!0}}]);