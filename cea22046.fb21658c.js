(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{78:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return o})),t.d(a,"metadata",(function(){return p})),t.d(a,"toc",(function(){return i})),t.d(a,"default",(function(){return b}));var n=t(3),s=t(7),r=(t(0),t(88)),l=["components"],o={id:"validating-fields",title:"Validating fields"},p={unversionedId:"validating-fields",id:"validating-fields",isDocsHomePage:!1,title:"Validating fields",description:"formo supports field validations via Validators.",source:"@site/docs/validating-fields.md",slug:"/validating-fields",permalink:"/formo/validating-fields",editUrl:"https://github.com/buildo/formo/edit/main/website/docs/validating-fields.md",version:"current",sidebar:"someSidebar",previous:{title:"Recommended patterns",permalink:"/formo/recommended-patterns"},next:{title:"Submitting a form",permalink:"/formo/submitting"}},i=[{value:"Simple Validation",id:"simple-validation",children:[]},{value:"Multiple validations on a field",id:"multiple-validations-on-a-field",children:[]},{value:"Transforming values",id:"transforming-values",children:[]},{value:"Defining custom validations",id:"defining-custom-validations",children:[]}],c={toc:i};function b(e){var a=e.components,t=Object(s.a)(e,l);return Object(r.b)("wrapper",Object(n.a)({},c,t,{components:a,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"formo")," supports field validations via ",Object(r.b)("inlineCode",{parentName:"p"},"Validator"),"s."),Object(r.b)("div",{className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"export"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"type"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"type Validator<I, O, E> = (input: I) => Promise<Result<NonEmptyArray<E>, O>>"},"Validator")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"<"),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) I in type Validator<I, O, E>"},"I")),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) O in type Validator<I, O, E>"},"O")),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) E in type Validator<I, O, E>"},"E")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"> "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," (")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) input: I"},"input")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) I in type Validator<I, O, E>"},"I"))),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"interface Promise<T>"},"Promise")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"<"),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) type Result<L, R> = Success<R> | Failure<L>\nimport Result"},"Result")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"<"),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) type NonEmptyArray<T> = [T, ...T[]]\nimport NonEmptyArray"},"NonEmptyArray")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"<"),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) E in type Validator<I, O, E>"},"E")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) O in type Validator<I, O, E>"},"O")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">>;"))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"export"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"type"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"type Validator<I, O, E> = (input: I) => Promise<Result<NonEmptyArray<E>, O>>"},"Validator")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"<"),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) I in type Validator<I, O, E>"},"I")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) O in type Validator<I, O, E>"},"O")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) E in type Validator<I, O, E>"},"E")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"> "),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," (")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) input: I"},"input")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) I in type Validator<I, O, E>"},"I"))),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"interface Promise<T>"},"Promise")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"<"),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) type Result<L, R> = Success<R> | Failure<L>\nimport Result"},"Result")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"<"),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) type NonEmptyArray<T> = [T, ...T[]]\nimport NonEmptyArray"},"NonEmptyArray")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"<"),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) E in type Validator<I, O, E>"},"E")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">, "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(type parameter) O in type Validator<I, O, E>"},"O")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">>;")))))),Object(r.b)("p",null,"A ",Object(r.b)("inlineCode",{parentName:"p"},"Validator")," is a function that takes the field's value as input ",Object(r.b)("inlineCode",{parentName:"p"},"I")," and returns a ",Object(r.b)("inlineCode",{parentName:"p"},"Result")," of\neither errors ",Object(r.b)("inlineCode",{parentName:"p"},"NonEmptyArray<E>")," or a valid output ",Object(r.b)("inlineCode",{parentName:"p"},"O"),"."),Object(r.b)("p",null,"Note that ",Object(r.b)("inlineCode",{parentName:"p"},"Validator"),"s may ",Object(r.b)("a",{parentName:"p",href:"#transforming-values"},"trasform the field's value")," other than just validating it."),Object(r.b)("h2",{id:"simple-validation"},"Simple Validation"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"formo")," provides a number of ",Object(r.b)("inlineCode",{parentName:"p"},"Validator"),"s for common use cases via a ",Object(r.b)("inlineCode",{parentName:"p"},"validators")," utility.\nFor example, to make sure a text field is at least 2 characters long:"),Object(r.b)("div",{className:"shiki-twoslash-fragment"}),Object(r.b)("div",{className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"import"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) function useFormo<Values extends Record<string, unknown>, Validators extends Partial<FieldValidators<Values>>, ArrayValidators extends Partial<SubFormValidators<Values>>, FormErrors, Label>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<Values, FormErrors, Label, ValidatorErrorType<Values, Validators>>\nimport useFormo"},"useFormo")),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) function success<L = never, R = never>(success: R): Result<L, R>\nimport success"},"success")," } "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"from"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"@buildo/formo"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},";")),Object(r.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," { "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <K extends "name">(name: K) => ComputedFieldProps<{\n    name: string;\n}[K], unknown, NonEmptyArray<never>>'},"fieldProps")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," } "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) useFormo<{\n    name: string;\n}, {\n    name: Validator<string, string, string>;\n}, Partial<SubFormValidators<{\n    name: string;\n}>>, never, unknown>(args_0: {\n    initialValues: {\n        name: string;\n    };\n    fieldValidators: (values: {\n        name: string;\n    }) => {\n        ...;\n    };\n    subFormValidators?: ((values: {\n        name: string;\n    }, index: number) => Partial<...>) | undefined;\n    validateOnChange?: boolean | undefined;\n    validateOnBlur?: boolean | undefined;\n}, args_1: {\n    ...;\n}): UseFormReturn<...>\nimport useFormo"},"useFormo")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) initialValues: {\n    name: string;\n}"},"initialValues")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'""'),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    }"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) fieldValidators: (values: {\n    name: string;\n}) => {\n    name: Validator<string, string, string>;\n}"},"fieldValidators")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," () "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ({")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) name: Validator<string, string, string>"},"name")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <string, string>(length: number, errorMessage: string) => Validator<string, string, string>"},"minLength")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"2"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Name is too short"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    })"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  }"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) onSubmit: (values: ValidatedValues<{\n    name: string;\n}, {\n    name: Validator<string, string, string>;\n}, Partial<SubFormValidators<{\n    name: string;\n}>>>) => Promise<...>"},"onSubmit")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"async"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," (",Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) values: ValidatedValues<{\n    name: string;\n}, {\n    name: Validator<string, string, string>;\n}, Partial<SubFormValidators<{\n    name: string;\n}>>>"},"values"),") "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) success<never, ValidatedValues<{\n    name: string;\n}, {\n    name: Validator<string, string, string>;\n}, Partial<SubFormValidators<{\n    name: string;\n}>>>>(success: ValidatedValues<...>): Result<...>\nimport success"},"success")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(",Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) values: ValidatedValues<{\n    name: string;\n}, {\n    name: Validator<string, string, string>;\n}, Partial<SubFormValidators<{\n    name: string;\n}>>>"},"values"),")"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  }")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},");"))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"import"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," { "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) function useFormo<Values extends Record<string, unknown>, Validators extends Partial<FieldValidators<Values>>, ArrayValidators extends Partial<SubFormValidators<Values>>, FormErrors, Label>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<Values, FormErrors, Label, ValidatorErrorType<Values, Validators>>\nimport useFormo"},"useFormo")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) function success<L = never, R = never>(success: R): Result<L, R>\nimport success"},"success")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," } "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"from"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"@buildo/formo"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},";")),Object(r.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," { "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <K extends "name">(name: K) => ComputedFieldProps<{\n    name: string;\n}[K], unknown, NonEmptyArray<never>>'},"fieldProps")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," } "),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) useFormo<{\n    name: string;\n}, {\n    name: Validator<string, string, string>;\n}, Partial<SubFormValidators<{\n    name: string;\n}>>, never, unknown>(args_0: {\n    initialValues: {\n        name: string;\n    };\n    fieldValidators: (values: {\n        name: string;\n    }) => {\n        ...;\n    };\n    subFormValidators?: ((values: {\n        name: string;\n    }, index: number) => Partial<...>) | undefined;\n    validateOnChange?: boolean | undefined;\n    validateOnBlur?: boolean | undefined;\n}, args_1: {\n    ...;\n}): UseFormReturn<...>\nimport useFormo"},"useFormo")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) initialValues: {\n    name: string;\n}"},"initialValues")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"},"name")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'""'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    },")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) fieldValidators: (values: {\n    name: string;\n}) => {\n    name: Validator<string, string, string>;\n}"},"fieldValidators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": () "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ({")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) name: Validator<string, string, string>"},"name")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <string, string>(length: number, errorMessage: string) => Validator<string, string, string>"},"minLength")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},"2"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Name is too short"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    }),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  },")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) onSubmit: (values: ValidatedValues<{\n    name: string;\n}, {\n    name: Validator<string, string, string>;\n}, Partial<SubFormValidators<{\n    name: string;\n}>>>) => Promise<...>"},"onSubmit")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"async"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) values: ValidatedValues<{\n    name: string;\n}, {\n    name: Validator<string, string, string>;\n}, Partial<SubFormValidators<{\n    name: string;\n}>>>"},"values")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) success<never, ValidatedValues<{\n    name: string;\n}, {\n    name: Validator<string, string, string>;\n}, Partial<SubFormValidators<{\n    name: string;\n}>>>>(success: ValidatedValues<...>): Result<...>\nimport success"},"success")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) values: ValidatedValues<{\n    name: string;\n}, {\n    name: Validator<string, string, string>;\n}, Partial<SubFormValidators<{\n    name: string;\n}>>>"},"values")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  }")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},");")))))),Object(r.b)("p",null,"Possible validation errors can be accessed via the ",Object(r.b)("inlineCode",{parentName:"p"},"issues")," field:"),Object(r.b)("div",{className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <"name">(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<never>>'},"fieldProps")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"name"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},").",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) issues?: NonEmptyArray<never> | undefined"},"issues"),";"))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <"name">(name: "name") => ComputedFieldProps<string, unknown, NonEmptyArray<never>>'},"fieldProps")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"name"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")."),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) issues?: NonEmptyArray<never> | undefined"},"issues")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},";")))))),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"The type of ",Object(r.b)("inlineCode",{parentName:"p"},"issues")," depends on the validator error type ",Object(r.b)("inlineCode",{parentName:"p"},"E"),"."),Object(r.b)("p",{parentName:"div"},"For instance, if we were to use a validator as follows:"),Object(r.b)("div",{parentName:"div",className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <{\n    message: string;\n    severity: number;\n}, string>(length: number, errorMessage: {\n    message: string;\n    severity: number;\n}) => Validator<string, string, {\n    message: string;\n    severity: number;\n}>"},"minLength")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"2"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) message: string"},"message")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Name is too short"'),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) severity: number"},"severity")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"1"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," });"))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <{\n    message: string;\n    severity: number;\n}, string>(length: number, errorMessage: {\n    message: string;\n    severity: number;\n}) => Validator<string, string, {\n    message: string;\n    severity: number;\n}>"},"minLength")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},"2"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", { "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) message: string"},"message")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Name is too short"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) severity: number"},"severity")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},"1"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," });")))))),Object(r.b)("p",{parentName:"div"},"then the type of ",Object(r.b)("inlineCode",{parentName:"p"},"issues")," would be"),Object(r.b)("p",{parentName:"div"},Object(r.b)("inlineCode",{parentName:"p"},"NonEmptyArray<{ message: string, severity: number }> | undefined")))),Object(r.b)("h2",{id:"multiple-validations-on-a-field"},"Multiple validations on a field"),Object(r.b)("p",null,"Some fields may require multiple validations. We can combine validations using the ",Object(r.b)("inlineCode",{parentName:"p"},"inSequence"),"\nand ",Object(r.b)("inlineCode",{parentName:"p"},"inParallel")," combinators."),Object(r.b)("p",null,"As the name suggests, ",Object(r.b)("inlineCode",{parentName:"p"},"inSequence")," runs validations one after the other and the field's ",Object(r.b)("inlineCode",{parentName:"p"},"issues"),"\nwill contain the ",Object(r.b)("strong",{parentName:"p"},"first")," validation that failed:"),Object(r.b)("div",{className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) inSequence: <string, string, string, string>(v1: Validator<string, string, string>, v2: Validator<string, string, string>) => Validator<string, string, string> (+3 overloads)"},"inSequence")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <string, string>(length: number, errorMessage: string) => Validator<string, string, string>"},"minLength")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"2"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Too short"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) regex: <string, string>(regex: RegExp, errorMessage: string) => Validator<string, string, string>"},"regex")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},"/"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"^"),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},"[A-Z]/"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Must start with an uppercase letter"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},");"))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) inSequence: <string, string, string, string>(v1: Validator<string, string, string>, v2: Validator<string, string, string>) => Validator<string, string, string> (+3 overloads)"},"inSequence")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <string, string>(length: number, errorMessage: string) => Validator<string, string, string>"},"minLength")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},"2"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Too short"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) regex: <string, string>(regex: RegExp, errorMessage: string) => Validator<string, string, string>"},"regex")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},"/"),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"^"),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},"[A-Z]"),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},"/"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Must start with an uppercase letter"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},");")))))),Object(r.b)("p",null,"Alternatively, we can run the same validations in parallel:"),Object(r.b)("div",{className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) inParallel: <string, string, string>(v1: Validator<string, string, string>, v2: Validator<string, string, string>) => Validator<string, string, string> (+2 overloads)"},"inParallel")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <string, string>(length: number, errorMessage: string) => Validator<string, string, string>"},"minLength")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"2"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Too short"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) regex: <string, string>(regex: RegExp, errorMessage: string) => Validator<string, string, string>"},"regex")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},"/"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"^"),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},"[A-Z]/"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Must start with an uppercase letter"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},");"))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"ts"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) inParallel: <string, string, string>(v1: Validator<string, string, string>, v2: Validator<string, string, string>) => Validator<string, string, string> (+2 overloads)"},"inParallel")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) minLength: <string, string>(length: number, errorMessage: string) => Validator<string, string, string>"},"minLength")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},"2"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Too short"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) regex: <string, string>(regex: RegExp, errorMessage: string) => Validator<string, string, string>"},"regex")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},"/"),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"^"),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},"[A-Z]"),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},"/"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Must start with an uppercase letter"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},");")))))),Object(r.b)("p",null,"In this case, the field's ",Object(r.b)("inlineCode",{parentName:"p"},"issues")," will contain ",Object(r.b)("strong",{parentName:"p"},"all")," the failed validations."),Object(r.b)("h2",{id:"transforming-values"},"Transforming values"),Object(r.b)("p",null,"If we take a look at how ",Object(r.b)("inlineCode",{parentName:"p"},"Validator")," is defined, we will notice that it has both\nan input and an output type. While it's common that they are the same, this also\nmeans that ",Object(r.b)("inlineCode",{parentName:"p"},"Validators")," can produce a value which is different than the one in\ninput."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},'This capability means that we\'re technically "parsing" instead of "validating"\nthe field values.'),Object(r.b)("p",{parentName:"div"},'We sticked to "validation" to preserve familiarity with the term in the context\nof forms.'),Object(r.b)("p",{parentName:"div"},Object(r.b)("a",{parentName:"p",href:"https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/"},"Here's an excellent blog post that explains the difference between parsing and\nvalidating"),"."))),Object(r.b)("p",null,"One example of validation that transforms the value is the ",Object(r.b)("inlineCode",{parentName:"p"},"validators.defined"),"\nvalidator:"),Object(r.b)("div",{className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"import"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) function useFormo<Values extends Record<string, unknown>, Validators extends Partial<FieldValidators<Values>>, ArrayValidators extends Partial<SubFormValidators<Values>>, FormErrors, Label>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<Values, FormErrors, Label, ValidatorErrorType<Values, Validators>>\nimport useFormo"},"useFormo")),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) function success<L = never, R = never>(success: R): Result<L, R>\nimport success"},"success")," } "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"from"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"@buildo/formo"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},";")),Object(r.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"type"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"type FormValues = {\n    profession?: string | undefined;\n}"},"FormValues")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) profession?: string | undefined"},"profession")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"?:"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"string"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},";")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"};")),Object(r.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"export"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"const MyForm: () => JSX.Element"},"MyForm")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," () "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"const initialValues: FormValues"},"initialValues")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"type FormValues = {\n    profession?: string | undefined;\n}"},"FormValues")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) profession?: string | undefined"},"profession")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"var undefined"},"undefined")),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  };")),Object(r.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," { "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <K extends "profession">(name: K) => ComputedFieldProps<FormValues[K], unknown, NonEmptyArray<never>>'},"fieldProps")),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"const handleSubmit: () => Promise<Result<unknown, unknown>>"},"handleSubmit")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," } "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) useFormo<FormValues, {\n    profession: Validator<string | undefined, string, string>;\n}, Partial<SubFormValidators<FormValues>>, never, unknown>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<...>\nimport useFormo"},"useFormo")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) initialValues: FormValues"},"initialValues")),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) fieldValidators: (values: FormValues) => {\n    profession: Validator<string | undefined, string, string>;\n}"},"fieldValidators")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," (",Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) _: FormValues"},"_"),") "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ({")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) profession: Validator<string | undefined, string, string>"},"profession")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) defined: <string | undefined, string>(errorMessage: string) => Validator<string | undefined, string, string>"},"defined")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"You must select a profession"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      })"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    }"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) onSubmit: (values: ValidatedValues<FormValues, {\n    profession: Validator<string | undefined, string, string>;\n}, Partial<SubFormValidators<FormValues>>>) => Promise<...>"},"onSubmit")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"async"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," (",Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) values: ValidatedValues<FormValues, {\n    profession: Validator<string | undefined, string, string>;\n}, Partial<SubFormValidators<FormValues>>>"},"values"),") "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) success<never, ValidatedValues<FormValues, {\n    profession: Validator<string | undefined, string, string>;\n}, Partial<SubFormValidators<FormValues>>>>(success: ValidatedValues<...>): Result<...>\nimport success"},"success")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(",Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) values: ValidatedValues<FormValues, {\n    profession: Validator<string | undefined, string, string>;\n}, Partial<SubFormValidators<FormValues>>>"},"values"),")"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    }")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  );")),Object(r.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"return"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," (")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    <"),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      <"),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"const RadioGroup: (props: Props) => JSX.Element"},"RadioGroup"))),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Profession"')),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) options: string[]"},"options")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{["),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Developer"'),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Designer"'),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Other"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"]}")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"        {"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"..."),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <"profession">(name: "profession") => ComputedFieldProps<string | undefined, unknown, NonEmptyArray<never>>'},"fieldProps")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"profession"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")}")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      />")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      <"),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined"},"onClick")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"{",Object(r.b)("data-lsp",{parentName:"span",lsp:"const handleSubmit: () => Promise<Result<unknown, unknown>>"},"handleSubmit"),"}>Submit</"),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    </"),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},">")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  );")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"};"))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"import"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," { "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) function useFormo<Values extends Record<string, unknown>, Validators extends Partial<FieldValidators<Values>>, ArrayValidators extends Partial<SubFormValidators<Values>>, FormErrors, Label>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<Values, FormErrors, Label, ValidatorErrorType<Values, Validators>>\nimport useFormo"},"useFormo")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) function success<L = never, R = never>(success: R): Result<L, R>\nimport success"},"success")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," } "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"from"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"@buildo/formo"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},";")),Object(r.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"type"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"type FormValues = {\n    profession?: string | undefined;\n}"},"FormValues")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) profession?: string | undefined"},"profession")),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"?"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},"string"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},";")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"};")),Object(r.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"export"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"const MyForm: () => JSX.Element"},"MyForm")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," () "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"const initialValues: FormValues"},"initialValues")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"type FormValues = {\n    profession?: string | undefined;\n}"},"FormValues")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) profession?: string | undefined"},"profession")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"var undefined"},"undefined")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  };")),Object(r.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," { "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <K extends "profession">(name: K) => ComputedFieldProps<FormValues[K], unknown, NonEmptyArray<never>>'},"fieldProps")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"const handleSubmit: () => Promise<Result<unknown, unknown>>"},"handleSubmit")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," } "),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) useFormo<FormValues, {\n    profession: Validator<string | undefined, string, string>;\n}, Partial<SubFormValidators<FormValues>>, never, unknown>(args_0: {\n    ...;\n}, args_1: {\n    ...;\n}): UseFormReturn<...>\nimport useFormo"},"useFormo")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) initialValues: FormValues"},"initialValues")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) fieldValidators: (values: FormValues) => {\n    profession: Validator<string | undefined, string, string>;\n}"},"fieldValidators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": ("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) _: FormValues"},"_")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ({")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) profession: Validator<string | undefined, string, string>"},"profession")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) defined: <string | undefined, string>(errorMessage: string) => Validator<string | undefined, string, string>"},"defined")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"You must select a profession"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      }),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    },")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) onSubmit: (values: ValidatedValues<FormValues, {\n    profession: Validator<string | undefined, string, string>;\n}, Partial<SubFormValidators<FormValues>>>) => Promise<...>"},"onSubmit")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"async"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) values: ValidatedValues<FormValues, {\n    profession: Validator<string | undefined, string, string>;\n}, Partial<SubFormValidators<FormValues>>>"},"values")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) success<never, ValidatedValues<FormValues, {\n    profession: Validator<string | undefined, string, string>;\n}, Partial<SubFormValidators<FormValues>>>>(success: ValidatedValues<...>): Result<...>\nimport success"},"success")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) values: ValidatedValues<FormValues, {\n    profession: Validator<string | undefined, string, string>;\n}, Partial<SubFormValidators<FormValues>>>"},"values")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    }")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  );")),Object(r.b)("div",{parentName:"code",className:"line"},"\xa0"),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"return"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," (")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    <"),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      <"),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"const RadioGroup: (props: Props) => JSX.Element"},"RadioGroup"))),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        "),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) label: string"},"label")),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Profession"')),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        "),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) options: string[]"},"options")),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"["),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Developer"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Designer"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Other"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"]"),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"        "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"..."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:'const fieldProps: <"profession">(name: "profession") => ComputedFieldProps<string | undefined, unknown, NonEmptyArray<never>>'},"fieldProps")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"profession"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")"),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      />")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      <"),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(JSX attribute) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined"},"onClick")),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"{"),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"const handleSubmit: () => Promise<Result<unknown, unknown>>"},"handleSubmit")),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"}"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">Submit</"),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>"},"button")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    </"),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>"},"div")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},">")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  );")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"};")))))),Object(r.b)("p",null,"As we discussed, ",Object(r.b)("inlineCode",{parentName:"p"},"onSubmit")," is only ever called ",Object(r.b)("strong",{parentName:"p"},"after")," all field validations\nsucceed, and this is reflected in the types."),Object(r.b)("p",null,"In this example ",Object(r.b)("inlineCode",{parentName:"p"},"profession")," has type ",Object(r.b)("inlineCode",{parentName:"p"},"string"),", while the non-validated field is\n",Object(r.b)("inlineCode",{parentName:"p"},"string | undefined"),"."),Object(r.b)("p",null,"This is a very powerful capability, because it allows you to preserve in the\ntypes some useful information you checked during validation."),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"Due to a known issue, a transforming validator value's type might result ",Object(r.b)("inlineCode",{parentName:"p"},"unknown")," in the ",Object(r.b)("inlineCode",{parentName:"p"},"onSubmit")," callback."),Object(r.b)("p",{parentName:"div"},"To avoid it, specify the the ",Object(r.b)("inlineCode",{parentName:"p"},"fieldValidators")," function argument and let the type inference do the work:"),Object(r.b)("div",{parentName:"div",className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"undefined"}},'fieldValidators: (_) => ({\n  profession: validators.defined("You must select a profession")\n})'))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"undefined"}},'fieldValidators: (_) => ({\n  profession: validators.defined("You must select a profession")\n})')))))),Object(r.b)("p",{parentName:"div"},"Otherwise, you can specify the type of each validator:"),Object(r.b)("div",{parentName:"div",className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"undefined"}},'fieldValidators: () => ({\n  profession: validators.defined<string | undefined, string>("You must select a profession"),\n})'))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"undefined"}},'fieldValidators: () => ({\n  profession: validators.defined<string | undefined, string>("You must select a profession"),\n})')))))),Object(r.b)("p",{parentName:"div"},"but it is not recommended due to verbosity and error-proness."))),Object(r.b)("h2",{id:"defining-custom-validations"},"Defining custom validations"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"formo")," comes with a set of common validators, but you can of course augment\nthem by providing your own."),Object(r.b)("div",{className:"shiki-twoslash-fragment"}),Object(r.b)("p",null,"For instance, you could leverage existing validators"),Object(r.b)("div",{className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"const startsWithUppercaseLetter: (errorMessage: string) => Validator<string, string, string>"},"startsWithUppercaseLetter")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," (",Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) errorMessage: string"},"errorMessage")),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"string"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) regex: <string, string>(regex: RegExp, errorMessage: string) => Validator<string, string, string>"},"regex")),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},"/"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"^"),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},"[A-Z]/"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},","),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) errorMessage: string"},"errorMessage"))),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},");"))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"const startsWithUppercaseLetter: (errorMessage: string) => Validator<string, string, string>"},"startsWithUppercaseLetter")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) errorMessage: string"},"errorMessage")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},"string"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(alias) const validators: {\n    lengthRange: <E, S extends string>(minLength: number, maxLength: number, errorMessage: E) => Validator<string, S, E>;\n    minLength: <E, S extends string>(length: number, errorMessage: E) => Validator<...>;\n    ... 11 more ...;\n    validateIfDefined: <I, O, E>(contentValidator: Validator<...>) => Validator<...>;\n}\nimport validators"},"validators")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) regex: <string, string>(regex: RegExp, errorMessage: string) => Validator<string, string, string>"},"regex")),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},"/"),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"^"),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},"[A-Z]"),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},"/"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},", "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) errorMessage: string"},"errorMessage"))),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},");")))))),Object(r.b)("p",null,"or create a completely custom one"),Object(r.b)("div",{className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},"perfectNumberValidator"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," (errorMessage"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"string"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"validators"),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},".val",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) regex: <string, string>(regex: RegExp, errorMessage: string) => Validator<string, string, string>"},"idato"),"r"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  (n"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"number"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," n "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"==="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"42"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"?"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},"success"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(n) "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},"failure"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(errorMessage)")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},");"))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},"perfectNumberValidator"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"errorMessage"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},"string"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},"validators"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"."),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},"val",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) regex: <string, string>(regex: RegExp, errorMessage: string) => Validator<string, string, string>"},"idato"),"r"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  ("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"n"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},"number"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"n"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"==="),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},"42"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"?"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},"success"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"n"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},"failure"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"errorMessage"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},")")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},");")))))),Object(r.b)("p",null,"and use them accordingly"),Object(r.b)("div",{className:"shiki-twoslash-fragment"},Object(r.b)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," { "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"fieldProps"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," } "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},"useFormo"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    initialValues"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      name"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'""'),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      age"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#1976D2"}},"0"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    }",Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) n: number"})),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},"fieldValidators"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," () "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," ({")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      name"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},"startsWithUppercaseLetter"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Name must start with uppercase letter"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"      age"),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},"perfectNumberValidator"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#22863A"}},'"Age must be 42"'),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},")"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    })"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  }"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"    "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},"onSubmit",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"})),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"async"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," (values) "),Object(r.b)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#6F42C1"}},"success"),Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"(values)"),Object(r.b)("span",{parentName:"div",style:{color:"#212121"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},"  }")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#24292EFF"}},");"))))),Object(r.b)("pre",{parentName:"div",className:"shiki one-dark-pro twoslash lsp",style:{backgroundColor:"#282c34",color:"#abb2bf"}},Object(r.b)("div",{parentName:"pre",className:"language-id"},"tsx"),Object(r.b)("div",{parentName:"pre",className:"code-container"},Object(r.b)("code",{parentName:"div"},Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"const"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," { "),Object(r.b)("span",{parentName:"div",style:{color:"#E5C07B"}},"fieldProps"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," } "),Object(r.b)("span",{parentName:"div",style:{color:"#56B6C2"}},"="),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},"useFormo"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"(")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"initialValues"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"name"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'""'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"age"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#D19A66"}},"0"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},",")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    },",Object(r.b)("data-lsp",{parentName:"span",lsp:"(parameter) n: number"}))),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},"fieldValidators"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": () "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ({")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"name"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},"startsWithUppercaseLetter"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Name must start with uppercase letter"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"      "),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"age"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},"perfectNumberValidator"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#98C379"}},'"Age must be 42"'),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    }),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  },")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  {")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"    "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},"onSubmit",Object(r.b)("data-lsp",{parentName:"span",lsp:"(property) name: string"})),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},": "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"async"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," ("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"values"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},") "),Object(r.b)("span",{parentName:"div",style:{color:"#C678DD"}},"=>"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}}," "),Object(r.b)("span",{parentName:"div",style:{color:"#61AFEF"}},"success"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"("),Object(r.b)("span",{parentName:"div",style:{color:"#E06C75"}},"values"),Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"),")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},"  }")),Object(r.b)("div",{parentName:"code",className:"line"},Object(r.b)("span",{parentName:"div",style:{color:"#ABB2BF"}},");")))))))}b.isMDXComponent=!0}}]);